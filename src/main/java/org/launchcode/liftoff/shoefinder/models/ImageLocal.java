package org.launchcode.liftoff.shoefinder.models;


import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import org.springframework.data.annotation.Id;
import org.springframework.data.annotation.Transient;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

@Entity
public class ImageLocal {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Transient
    private MultipartFile imageFile;

    public Long getId() {
        return id;
    }

    public MultipartFile getImageFile() {
        return imageFile;
    }

    public void setImageFile(MultipartFile imageFile) {
        this.imageFile = imageFile;
    }


    public ImageLocal(MultipartFile imageFile) {
        this.imageFile = imageFile;
    }

    public ImageLocal() {}

    public void saveImageLocally(List<MultipartFile> imageFiles){
        if(imageFiles!= null && !imageFiles.isEmpty()){
            for(MultipartFile imageFile: imageFiles){
                if(!imageFile.isEmpty()) {
                    try {
                        //Create unique image name using autogenerated id
                        String fileName = "image_" + getId() + ".jpg";
                        //create file path for image
                        Path filePath = Paths.get("images/" + fileName);

                        // Save the file to the images directory within resources
                        Files.write(filePath, imageFile.getBytes());

                    } catch (IOException e) {
                        e.printStackTrace();
                        // Handle the exception if needed
                    }
                }
            }

        }
    }

}
