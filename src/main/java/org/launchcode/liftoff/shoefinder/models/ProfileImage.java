package org.launchcode.liftoff.shoefinder.models;


import jakarta.persistence.*;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Files;
import java.nio.file.Paths;

import static org.launchcode.liftoff.shoefinder.constants.ListingConstants.LISTING_IMAGE_DIR_PATH;

@Entity
public class ImageLocal {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Transient
    private MultipartFile imageFile;


    @ManyToOne
    private ShoeListing listing;

    public Long getId() {
        return id;
    }

    public MultipartFile getImageFile() {
        return imageFile;
    }

    public void setImageFile(MultipartFile imageFile) {
        this.imageFile = imageFile;
    }


    public ShoeListing getListing() {
        return listing;
    }

    public void setListing(ShoeListing listing) {
        this.listing = listing;
    }

    public ImageLocal() {}

    public void saveImageLocally(MultipartFile[] imageFiles){

//        String directoryPath = LISTING_IMAGE;

        if(imageFiles!= null && imageFiles.length>0){
            try {
                //Create unique image name using autogenerated id
                String fileName = "image_" + getId() + ".jpg";
                //create file path for image
                Path filePath = Paths.get(directoryPath + "\\" + fileName);
                // Save the file to the images directory within resources
                Files.write(filePath, imageFile.getBytes());
            } catch (IOException e) {
                e.printStackTrace();
                // Handle the exception if needed
            }
        }
    }


}

